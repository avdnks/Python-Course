# Планеты вращаются вокруг звезд по эллиптическим орбитам. Назовем самой далекой планетой ту, орбита 
# которой имеет самую большую площадь. Напишите функцию find_farthest_orbit(list_of_orbits), которая 
# среди списка орбит планет найдет ту, по которой вращается самая далекая планета.Результатом функции 
# должен быть кортеж, содержащий длины полуосей эллипса орбиты самой далекой планеты. Каждая орбита 
# представляет из себя кортеж из пары чисел - полуосей ее эллипса. Площадь эллипса вычисляется по 
# формуле S = pi*a*b, где a и b - длины полуосей эллипса. При решении задачи используйте списочные 
# выражения. Подсказка: проще всего будет найти эллипс в два шага: сначала вычислить самую большую 
# площадь эллипса, а затем найти и сам эллипс, имеющий такую площадь.

orbits = [(1, 3), (2.5, 10), (7, 2), (6, 6), (4, 3)]
def find_farthest_orbit (orbits) :
    return max(orbits, key = lambda x : x[0]*x[1] if x[0] != x[1] else -1)
print(find_farthest_orbit(orbits))

# def orb(orbits):
#     import math
#     s = []
#     for i in orbits:
#         if i[0] != i[1]:
#             s.append(i[0]*i[1]*math.pi)
#     maxx = s.index(max(s))
#     return orbits[maxx]

# print(orb(orbits))
